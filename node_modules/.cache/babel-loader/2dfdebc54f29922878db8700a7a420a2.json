{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\Sirius\\\\Rick And Morty\\\\rickandmorty4\\\\rickandmortygql\\\\src\\\\components\\\\Character\\\\List\\\\RickAndMorty.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Container, Row, Col, Spinner } from 'react-bootstrap';\nimport './RickAndMorty.scss';\nimport { CharacterCard } from '../Card/CharacterCard';\nimport { SearchBar } from '../../SearchBar/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RickAndMorty = props => {\n  _s();\n\n  const [state, setState] = useState(props.characters);\n\n  const onSearch = text => {\n    if (text) {\n      const results = props.characters.filter(e => e.name.toLowerCase().trim().includes((!text ? \"\" : text).toLowerCase()));\n      setState(results);\n    } else {\n      setState([]);\n    }\n  };\n\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: state.length > 0 || props.characters.length > 0 ? (state.length ? state : props.characters).map((character, index) => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        character: character\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Character Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RickAndMorty, \"IbQH9PYYqmaey8utjfbL22J/b14=\");\n\n_c = RickAndMorty;\n\nvar _c;\n\n$RefreshReg$(_c, \"RickAndMorty\");","map":{"version":3,"sources":["C:/Users/PC/Documents/Sirius/Rick And Morty/rickandmorty4/rickandmortygql/src/components/Character/List/RickAndMorty.js"],"names":["React","useEffect","useState","Card","Container","Row","Col","Spinner","CharacterCard","SearchBar","RickAndMorty","props","state","setState","characters","onSearch","text","results","filter","e","name","toLowerCase","trim","includes","console","log","length","map","character","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,OAApC,QAAkD,iBAAlD;AACA,OAAO,qBAAP;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,SAAR,QAAwB,2BAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,KAAK,CAACG,UAAP,CAAlC;;AAEA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB,QAAGA,IAAH,EAAS;AACL,YAAMC,OAAO,GAAGN,KAAK,CAACG,UAAN,CAAiBI,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,IAArB,GAA4BC,QAA5B,CAAqC,CAAC,CAACP,IAAD,GAAQ,EAAR,GAAaA,IAAd,EAAoBK,WAApB,EAArC,CAA7B,CAAhB;AACAR,MAAAA,QAAQ,CAACI,OAAD,CAAR;AACH,KAHD,MAGK;AACDJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAPD;;AASAZ,EAAAA,SAAS,CAAE,MAAO;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAA,gBAEOH,KAAK,CAACc,MAAN,GAAe,CAAf,IAAoBf,KAAK,CAACG,UAAN,CAAiBY,MAAjB,GAA0B,CAA9C,GAAoD,CAACd,KAAK,CAACc,MAAN,GAAed,KAAf,GAAuBD,KAAK,CAACG,UAA9B,EAA0Ca,GAA1C,CAA8C,CAACC,SAAD,EAAYC,KAAZ,kBAC7F,QAAC,aAAD;AAAe,QAAA,SAAS,EAAED;AAA1B,SAA0CC,KAA1C;AAAA;AAAA;AAAA;AAAA,cAD+C,CAApD,gBAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BM;;GAAMnB,Y;;KAAAA,Y","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Card, Container, Row, Col, Spinner} from 'react-bootstrap';\r\nimport './RickAndMorty.scss';\r\nimport {CharacterCard} from '../Card/CharacterCard'\r\nimport {SearchBar} from '../../SearchBar/SearchBar'\r\n\r\nexport const RickAndMorty = (props) => {\r\n    const [state, setState] = useState(props.characters);\r\n\r\n    const onSearch = (text) => {\r\n        if(text) {\r\n            const results = props.characters.filter(e => e.name.toLowerCase().trim().includes((!text ? \"\" : text).toLowerCase()));\r\n            setState(results);\r\n        }else{\r\n            setState([]);\r\n        }\r\n    }\r\n\r\n    useEffect( ( ) => {\r\n        console.log(state)\r\n    }, [state])\r\n\r\n    return(\r\n        <Container>\r\n            <SearchBar onSearch={onSearch}/>\r\n            <Row>\r\n                {\r\n                   state.length > 0 || props.characters.length > 0 ?  ((state.length ? state : props.characters).map((character, index) => (\r\n                        <CharacterCard character={character} key={index} />\r\n                    ))) : <div>Character Not Found</div>\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}